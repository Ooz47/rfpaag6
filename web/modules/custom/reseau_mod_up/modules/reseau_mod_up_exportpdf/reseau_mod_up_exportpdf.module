<?php

use Drupal\Core\Url;
use Drupal\views\ViewExecutable;

/**
 * @file
 * Contains reseau_mod_up_exportpdf.module.
 */


/**
 * Implements hook_theme().
 */
function reseau_mod_up_exportpdf_theme()
{
  $theme['htmlpdf'] = [
    'base hook' => 'htmlpdf',
  ];

  $theme['node__formation__export_pdf'] = [
    'base hook' => 'node',
  ];

  return $theme;
}



function reseau_mod_up_exportpdf_mpdf_config_alter(&$mpdf_config)
{
  // dsm($data);
  // $data['tempDir'] = \Drupal::service('file_system')->realpath(file_default_scheme() . "://temp_pdf_preview");

  // $mpdf_config['fontDir'] = __DIR__ . '/custom/font/directory';
  $mpdf_config['fontDir'][] = __DIR__ . '/fonts';
  $mpdf_config['fontdata']["opensans"] =
    array(
      'R' => "OpenSans-Regular.ttf",
      'B' => "OpenSans-SemiBold.ttf",
      'I' => "OpenSans-Italic.ttf",
      'BI' => "OpenSans-SemiBoldItalic.ttf",
    );
    // $mpdf->setAutoTopMargin = 'stretch';
    // $mpdf_config['setAutoTopMargin'] = 'pad';
  // return dsm($mpdf_config);
  return $mpdf_config;
}

function reseau_mod_up_exportpdf_page_attachments_alter(array &$attachments)
{
  /*ajoute js que si sur une page formation*/

  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {

    $front =  Url::fromRoute('<front>', [], ['absolute' => TRUE])->toString();
    if ($node->getType() == 'formation') {
      $node_id = [
        'id' => $node->id(),
        'front' => $front,
      ];

      $attachments['#attached']['library'][] = 'reseau_mod_up_exportpdf/extra.user';
      $attachments['#attached']['drupalSettings']['node'] = $node_id;
    }
  }

}
